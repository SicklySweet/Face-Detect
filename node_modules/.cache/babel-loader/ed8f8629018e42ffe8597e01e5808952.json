{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\us3l3\\\\Desktop\\\\git\\\\face-detect\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport SignOut from './Components/SignOut/SignOut.js';\nimport Logo from './Components/Logo/Logo.js';\nimport URLForm from './Components/URLForm/URLForm.js';\nimport Rank from './Components/Rank/Rank.js';\nimport Particles from 'react-particles-js';\nimport SignIn from './Components/SignIn/SignIn.js';\nimport Register from './Components/Register/Register.js';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition.js';\nimport './App.css';\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 12,\n      density: {\n        enable: true,\n        value_area: 100\n      }\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signIn',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entires: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entires: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      fetch('https://infinite-wildwood-23609.herokuapp.com/imageUrl', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      }).then(response => response.json()).then(response => {\n        if (response) {\n          fetch('https://infinite-wildwood-23609.herokuapp.com:3000s/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          }).catch(console.log);\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signOut') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const _this$state = this.state,\n          isSignedIn = _this$state.isSignedIn,\n          imageUrl = _this$state.imageUrl,\n          route = _this$state.route,\n          box = _this$state.box;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(SignOut, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), route === 'home' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(URLForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })) : route === 'signIn' ? React.createElement(SignIn, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }) : React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\us3l3\\Desktop\\git\\face-detect\\src\\App.js"],"names":["React","Component","SignOut","Logo","URLForm","Rank","Particles","SignIn","Register","FaceRecognition","particlesOptions","particles","number","value","density","enable","value_area","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","entires","joined","App","constructor","loadUser","data","setState","entries","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","onButtonSubmit","state","fetch","method","headers","body","JSON","stringify","then","response","json","count","Object","assign","catch","console","log","err","onRouteChange","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport SignOut from './Components/SignOut/SignOut.js'\nimport Logo from './Components/Logo/Logo.js'\nimport URLForm from './Components/URLForm/URLForm.js'\nimport Rank from './Components/Rank/Rank.js'\nimport Particles from 'react-particles-js';\nimport SignIn from './Components/SignIn/SignIn.js'\nimport Register from './Components/Register/Register.js'\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition.js'\nimport './App.css';\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 12,\n      density: {\n        enable: true,\n        value_area: 100\n      }\n    }\n  }\n}\n\nconst initialState = {\n    input: '',\n    imageUrl: '',\n    box: {},\n    route: 'signIn',\n    isSignedIn: false,\n    user: {\n      id: '',\n      name: '',\n      email: '',\n      entires: 0,\n      joined: ''  \n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\nloadUser = (data) => {\n  this.setState({user: {\n    id: data.id,\n    name: data.name,\n    email: data.email,\n    entires: data.entries,\n    joined: data.joined\n    }})\n  }\n\ncalculateFaceLocation = (data) => {\n  const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n  const image = document.getElementById('inputimage');\n  const width = Number(image.width);\n  const height = Number(image.height);\n  return {\n    leftCol: clarifaiFace.left_col * width,\n    topRow: clarifaiFace.top_row * height,\n    rightCol: width - (clarifaiFace.right_col * width),\n    bottomRow: height - (clarifaiFace.bottom_row * height)\n  }\n}\n\ndisplayFaceBox = (box) => {\n  this.setState({ box });\n}\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  }\n\n  onButtonSubmit = () => {\n    this.setState({ imageUrl: this.state.input });\n      fetch('https://infinite-wildwood-23609.herokuapp.com/imageUrl', {\n        method: 'post',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify ({\n          input: this.state.input\n        })\n      })\n        .then(response => response.json())\n        .then(response => {\n        if (response) {\n          fetch('https://infinite-wildwood-23609.herokuapp.com:3000s/image', {\n            method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify ({\n              id: this.state.user.id\n            })\n          })\n            .then(response => response.json())\n            .then(count => {\n              this.setState(Object.assign(this.state.user, { entries: count}))\n            })\n            .catch(console.log);\n          }\n          this.displayFaceBox(this.calculateFaceLocation(response))\n        })\n        .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signOut') {\n      this.setState(initialState)\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n          params={particlesOptions}\n        />\n        <SignOut isSignedIn = {isSignedIn} onRouteChange = {this.onRouteChange} />\n        { route === 'home' \n          ? <div> \n              <Logo />\n              <Rank \n                name = {this.state.user.name}\n                entries = {this.state.user.entries} \n                 />\n              <URLForm \n                onInputChange = {this.onInputChange} \n                onButtonSubmit = {this.onButtonSubmit}\n              />\n            <FaceRecognition box = {box} imageUrl = {imageUrl}/>\n            </div>\n          : (\n            route === 'signIn' \n            ? <SignIn loadUser = {this.loadUser} onRouteChange = {this.onRouteChange} />\n            : <Register loadUser = {this.loadUser} onRouteChange = {this.onRouteChange} />\n            ) \n          }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}