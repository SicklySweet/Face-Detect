{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\us3l3\\\\Desktop\\\\git\\\\face-detect\\\\src\\\\App.js\";\nimport React from 'react';\nimport Clarifai from 'clarifai';\nimport SignOut from './Components/SignOut/SignOut.js';\nimport Logo from './Components/Logo/Logo.js';\nimport URLForm from './Components/URLForm/URLForm.js';\nimport Rank from './Components/Rank/Rank.js';\nimport Particles from 'react-particles-js';\nimport SignIn from './Components/SignIn/SignIn.js';\nimport Register from './Components/Register/Register.js';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition.js';\nimport './App.css';\nconst app = new Clarifai.App({\n  apiKey: '19c53d70cc7b45f69826ad7975f5ad08'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 12,\n      density: {\n        enable: true,\n        value_area: 100\n      }\n    }\n  }\n};\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entires: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          });\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signOut') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signIn',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entires: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          isSignedIn = _this$state.isSignedIn,\n          imageUrl = _this$state.imageUrl,\n          route = _this$state.route,\n          box = _this$state.box;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(SignOut, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), route === 'home' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(URLForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    })) : route === 'signIn' ? React.createElement(Signin, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }) : React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\us3l3\\Desktop\\git\\face-detect\\src\\App.js"],"names":["React","Clarifai","SignOut","Logo","URLForm","Rank","Particles","SignIn","Register","FaceRecognition","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","Component","constructor","loadUser","data","setState","user","id","name","email","entires","entries","joined","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","onInputChange","event","input","target","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","catch","err","console","log","onRouteChange","route","isSignedIn","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Clarifai from 'clarifai';\nimport SignOut from './Components/SignOut/SignOut.js'\nimport Logo from './Components/Logo/Logo.js'\nimport URLForm from './Components/URLForm/URLForm.js'\nimport Rank from './Components/Rank/Rank.js'\nimport Particles from 'react-particles-js';\nimport SignIn from './Components/SignIn/SignIn.js'\nimport Register from './Components/Register/Register.js'\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition.js'\nimport './App.css';\n\nconst app = new Clarifai.App({\n  apiKey: '19c53d70cc7b45f69826ad7975f5ad08'\n });\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 12,\n      density: {\n        enable: true,\n        value_area: 100\n      }\n    }\n  }\n}\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signIn',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entires: 0,\n        joined: ''\n      }\n    }\n  }\n\n  loadUser = (data) =>{\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entires: data.entries,\n      joined: data.joined\n    }})\n  }\n\ncalculateFaceLocation = (data) => {\n  const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n  const image = document.getElementById('inputimage');\n  const width = Number(image.width);\n  const height = Number(image.height);\n  return {\n    leftCol: clarifaiFace.left_col * width,\n    topRow: clarifaiFace.top_row * height,\n    rightCol: width - (clarifaiFace.right_col * width),\n    bottomRow: height - (clarifaiFace.bottom_row * height)\n  }\n}\n\ndisplayFaceBox = (box) => {\n  this.setState({ box });\n}\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  }\n\n  onButtonSubmit = () => {\n    this.setState({ imageUrl: this.state.input });\n    app.models\n      .predict(\n        Clarifai.FACE_DETECT_MODEL,\n        this.state.input)\n      .then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify ({\n              id: this.state.user.id\n            })\n          })\n\n          }\n          this.displayFaceBox(this.calculateFaceLocation(response))\n        })\n        .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signOut') {\n      this.setState({isSignedIn: false})\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n          params={particlesOptions}\n        />\n        <SignOut isSignedIn = {isSignedIn} onRouteChange = {this.onRouteChange} />\n        { route === 'home' \n          ? <div> \n              <Logo />\n              <Rank \n                name = {this.state.user.name}\n                entries = {this.state.user.entries} \n                 />\n              <URLForm \n                onInputChange = {this.onInputChange} \n                onButtonSubmit = {this.onButtonSubmit}\n              />\n            <FaceRecognition box = {box} imageUrl = {imageUrl}/>\n            </div>\n          : (\n            route === 'signIn' \n            ? <Signin loadUser = {this.loadUser} onRouteChange = {this.onRouteChange} />\n            : <Register loadUser = {this.loadUser} onRouteChange = {this.onRouteChange} />\n          )\n          \n          }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}